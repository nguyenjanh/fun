package Basic;

import java.util.Arrays;
import java.util.Scanner;

public class connectFour {

	public static int result(String[][] board) {
		
		/*
		 * 0 = no winner
		 * 1 = x wins
		 * 2 = o wins
		 * 3 = tie game
		 */
		
		//vertical
		for (int a = 0; a < 3; a++)
			for (int b = 0; b < 7; b++) {
				if (board[a][b].equals(board[a + 1][b]) && board[a][b].equals(board[a + 2][b]) && board[a][b].equals(board[a + 3][b])) {
					if (board[a][b].equals("X") && board[a + 3][b].equals("X"))
							return 1;
					else if (board[a][b].equals("O") && board[a + 3][b].equals("O"))
							return 2;
				}
			}
		
		//horizontal
		for (int a = 0; a < 6; a++)
			for (int b = 0; b < 4; b++) {
				if (board[a][b].equals(board[a][b + 1]) && board[a][b].equals(board[a][b + 2]) && board[a][b].equals(board[a][b + 3])) {
					if (board[a][b].equals("X") && board[a][b + 3].equals("X"))
							return 1;
					else if (board[a][b].equals("O") && board[a][b + 3].equals("O"))
							return 2;
				}
			}
		
		//diagonal bottom-left to top-right
		for (int a = 5; a > 2; a--)
			for (int b = 0; b < 3; b++) {
				if (board[a][b].equals(board[a - 1][b + 1]) && board[a][b].equals(board[a - 2][b + 2]) && board[a][b].equals(board[a - 3][b + 3])) {
					if (board[a][b].equals("X") && board[a - 3][b + 3].equals("X"))
							return 1;
					else if (board[a][b].equals("O") && board[a - 3][b + 3].equals("O"))
							return 2;
				}
			}
		
		//diagonal top-left to bottom-right
		for (int a = 0; a < 3; a++)
			for (int b = 0; b < 4; b++) {
				if (board[a][b].equals(board[a + 1][b + 1]) && board[a][b].equals(board[a + 2][b + 2]) && board[a][b].equals(board[a + 3][b + 3])) {
					if (board[a][b].equals("X") && board[a + 3][b + 3].equals("X"))
							return 1;
					else if (board[a][b].equals("O") && board[a + 3][b + 3].equals("O"))
							return 2;
				}
			}
		
		if (checkTie(board)) return 3;
		
		return 0;
		
	}

	public static void printBoard(String[][] board) {
		
		System.out.println("---------------");
		
		for (int c = 0; c < board.length; c++) {
			
			System.out.print("|");
			
			for (int d = 0; d < board[c].length; d++) {
				
				System.out.print(board[c][d] + "|");
				
			}	
			
			System.out.println();
			
		}
		
		System.out.println("---------------");
		
	}
	
	public static void resetBoard(String[][] board) {
		
		for (int a = 0; a < board.length; a++) 
			for (int b = 0; b < board[a].length; b++) 
				board[a][b] = "-";
		
	}
	
	public static boolean checkTie(String[][] board) {
		
		for (int a = 0; a < board.length; a++) 
			for (int b = 0; b < board[a].length; b++)
				if (board[a][b].equals("-"))
					return false;
		return true;
	}

	public static boolean checkValid(String[][] board, String[] moves, String input) {
		
		if (input.equals("-"))
			return false;
		
		for (int a = 0; a < moves.length; a++)
			if (moves[a].equals(input)) {
				if (!board[1][a].equals("-"))
					moves[a] = "-";
				return false;
			}
		return true;
	}

	public static void playerTurn(String[][] board, String[] possibleMoves, String player) {
		
		System.out.println("Player " + player + ", it is your turn. Select a column.");
		Scanner userInput = new Scanner(System.in);
		String intake = userInput.next();
		
		while (checkValid(board, possibleMoves, intake)) {
			
			System.out.println("You selected an invalid column. Please choose one of the following :");
			System.out.println(Arrays.toString(possibleMoves));
			userInput = new Scanner(System.in);
			intake = userInput.next();
			
		}
		
		int xCoor = Integer.parseInt(intake) - 1;
		
		for (int a = 5; a >= 0; a--) 
			if (board[a][xCoor].equals("-")) {
				board[a][xCoor] = player;
				break;
			}
		
		printBoard(board);
		
	}

	public static void checkStatus(String[][] board) {
		
		
		int winner = result(board);
		
		if (winner != 0) {
			if (winner == 1)
				System.out.println("Player X wins!");
			else if (winner == 2)
				System.out.println("Player O wins!");
			else if (winner == 3)
				System.out.println("Tie game!");
			System.exit(0);
		}
		
	}
	
	public static void main(String[] args) {
		
		String[][] board = new String[6][7];
		String[] possibleMoves = {"1","2","3","4","5","6","7"};
		
		resetBoard(board);
		printBoard(board);

		while (1 == 1) {
			
			playerTurn(board, possibleMoves, "X");
			
			checkStatus(board);
			
			playerTurn(board, possibleMoves, "O");
			
			checkStatus(board);
			
		}
		
	}

}
